// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t_y_raw_data_collection_pbf.proto

#ifndef PROTOBUF_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto__INCLUDED
#define PROTOBUF_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#ifdef major
#undef major
#endif
#ifdef minor
#undef minor
#endif
namespace innerpeacer {
namespace rawdata {
class TYRawBeaconSignalPbf;
class TYRawBeaconSignalPbfDefaultTypeInternal;
extern TYRawBeaconSignalPbfDefaultTypeInternal _TYRawBeaconSignalPbf_default_instance_;
class TYRawDataCollectionPbf;
class TYRawDataCollectionPbfDefaultTypeInternal;
extern TYRawDataCollectionPbfDefaultTypeInternal _TYRawDataCollectionPbf_default_instance_;
class TYRawHeadingEventPbf;
class TYRawHeadingEventPbfDefaultTypeInternal;
extern TYRawHeadingEventPbfDefaultTypeInternal _TYRawHeadingEventPbf_default_instance_;
class TYRawLocationPbf;
class TYRawLocationPbfDefaultTypeInternal;
extern TYRawLocationPbfDefaultTypeInternal _TYRawLocationPbf_default_instance_;
class TYRawSignalEventPbf;
class TYRawSignalEventPbfDefaultTypeInternal;
extern TYRawSignalEventPbfDefaultTypeInternal _TYRawSignalEventPbf_default_instance_;
class TYRawStepEventPbf;
class TYRawStepEventPbfDefaultTypeInternal;
extern TYRawStepEventPbfDefaultTypeInternal _TYRawStepEventPbf_default_instance_;
}  // namespace rawdata
}  // namespace innerpeacer

namespace innerpeacer {
namespace rawdata {

namespace protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto

// ===================================================================

class TYRawStepEventPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawStepEventPbf) */ {
 public:
  TYRawStepEventPbf();
  virtual ~TYRawStepEventPbf();

  TYRawStepEventPbf(const TYRawStepEventPbf& from);

  inline TYRawStepEventPbf& operator=(const TYRawStepEventPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawStepEventPbf& default_instance();

  static inline const TYRawStepEventPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawStepEventPbf*>(
               &_TYRawStepEventPbf_default_instance_);
  }

  void Swap(TYRawStepEventPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawStepEventPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawStepEventPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawStepEventPbf& from);
  void MergeFrom(const TYRawStepEventPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawStepEventPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawStepEventPbf)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double timestamp_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TYRawHeadingEventPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawHeadingEventPbf) */ {
 public:
  TYRawHeadingEventPbf();
  virtual ~TYRawHeadingEventPbf();

  TYRawHeadingEventPbf(const TYRawHeadingEventPbf& from);

  inline TYRawHeadingEventPbf& operator=(const TYRawHeadingEventPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawHeadingEventPbf& default_instance();

  static inline const TYRawHeadingEventPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawHeadingEventPbf*>(
               &_TYRawHeadingEventPbf_default_instance_);
  }

  void Swap(TYRawHeadingEventPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawHeadingEventPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawHeadingEventPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawHeadingEventPbf& from);
  void MergeFrom(const TYRawHeadingEventPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawHeadingEventPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // required double heading = 2;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 2;
  double heading() const;
  void set_heading(double value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawHeadingEventPbf)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_heading();
  void clear_has_heading();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double timestamp_;
  double heading_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TYRawBeaconSignalPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawBeaconSignalPbf) */ {
 public:
  TYRawBeaconSignalPbf();
  virtual ~TYRawBeaconSignalPbf();

  TYRawBeaconSignalPbf(const TYRawBeaconSignalPbf& from);

  inline TYRawBeaconSignalPbf& operator=(const TYRawBeaconSignalPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawBeaconSignalPbf& default_instance();

  static inline const TYRawBeaconSignalPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawBeaconSignalPbf*>(
               &_TYRawBeaconSignalPbf_default_instance_);
  }

  void Swap(TYRawBeaconSignalPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawBeaconSignalPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawBeaconSignalPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawBeaconSignalPbf& from);
  void MergeFrom(const TYRawBeaconSignalPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawBeaconSignalPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uuid = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // required uint32 major = 2;
  bool has_major() const;
  void clear_major();
  static const int kMajorFieldNumber = 2;
  ::google::protobuf::uint32 major() const;
  void set_major(::google::protobuf::uint32 value);

  // required uint32 minor = 3;
  bool has_minor() const;
  void clear_minor();
  static const int kMinorFieldNumber = 3;
  ::google::protobuf::uint32 minor() const;
  void set_minor(::google::protobuf::uint32 value);

  // required double x = 4;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 4;
  double x() const;
  void set_x(double value);

  // required double y = 5;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 5;
  double y() const;
  void set_y(double value);

  // required uint32 floor = 6;
  bool has_floor() const;
  void clear_floor();
  static const int kFloorFieldNumber = 6;
  ::google::protobuf::uint32 floor() const;
  void set_floor(::google::protobuf::uint32 value);

  // required uint32 rssi = 7;
  bool has_rssi() const;
  void clear_rssi();
  static const int kRssiFieldNumber = 7;
  ::google::protobuf::uint32 rssi() const;
  void set_rssi(::google::protobuf::uint32 value);

  // required double accuracy = 8;
  bool has_accuracy() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 8;
  double accuracy() const;
  void set_accuracy(double value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawBeaconSignalPbf)
 private:
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_major();
  void clear_has_major();
  void set_has_minor();
  void clear_has_minor();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_floor();
  void clear_has_floor();
  void set_has_rssi();
  void clear_has_rssi();
  void set_has_accuracy();
  void clear_has_accuracy();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::uint32 major_;
  ::google::protobuf::uint32 minor_;
  double x_;
  double y_;
  ::google::protobuf::uint32 floor_;
  ::google::protobuf::uint32 rssi_;
  double accuracy_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TYRawLocationPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawLocationPbf) */ {
 public:
  TYRawLocationPbf();
  virtual ~TYRawLocationPbf();

  TYRawLocationPbf(const TYRawLocationPbf& from);

  inline TYRawLocationPbf& operator=(const TYRawLocationPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawLocationPbf& default_instance();

  static inline const TYRawLocationPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawLocationPbf*>(
               &_TYRawLocationPbf_default_instance_);
  }

  void Swap(TYRawLocationPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawLocationPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawLocationPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawLocationPbf& from);
  void MergeFrom(const TYRawLocationPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawLocationPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // required double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // required uint32 floor = 3;
  bool has_floor() const;
  void clear_floor();
  static const int kFloorFieldNumber = 3;
  ::google::protobuf::uint32 floor() const;
  void set_floor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawLocationPbf)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_floor();
  void clear_has_floor();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double x_;
  double y_;
  ::google::protobuf::uint32 floor_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TYRawSignalEventPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawSignalEventPbf) */ {
 public:
  TYRawSignalEventPbf();
  virtual ~TYRawSignalEventPbf();

  TYRawSignalEventPbf(const TYRawSignalEventPbf& from);

  inline TYRawSignalEventPbf& operator=(const TYRawSignalEventPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawSignalEventPbf& default_instance();

  static inline const TYRawSignalEventPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawSignalEventPbf*>(
               &_TYRawSignalEventPbf_default_instance_);
  }

  void Swap(TYRawSignalEventPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawSignalEventPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawSignalEventPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawSignalEventPbf& from);
  void MergeFrom(const TYRawSignalEventPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawSignalEventPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .innerpeacer.rawdata.TYRawBeaconSignalPbf beacons = 2;
  int beacons_size() const;
  void clear_beacons();
  static const int kBeaconsFieldNumber = 2;
  const ::innerpeacer::rawdata::TYRawBeaconSignalPbf& beacons(int index) const;
  ::innerpeacer::rawdata::TYRawBeaconSignalPbf* mutable_beacons(int index);
  ::innerpeacer::rawdata::TYRawBeaconSignalPbf* add_beacons();
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawBeaconSignalPbf >*
      mutable_beacons();
  const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawBeaconSignalPbf >&
      beacons() const;

  // required .innerpeacer.rawdata.TYRawLocationPbf location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  const ::innerpeacer::rawdata::TYRawLocationPbf& location() const;
  ::innerpeacer::rawdata::TYRawLocationPbf* mutable_location();
  ::innerpeacer::rawdata::TYRawLocationPbf* release_location();
  void set_allocated_location(::innerpeacer::rawdata::TYRawLocationPbf* location);

  // required .innerpeacer.rawdata.TYRawLocationPbf immediateLocation = 4;
  bool has_immediatelocation() const;
  void clear_immediatelocation();
  static const int kImmediateLocationFieldNumber = 4;
  const ::innerpeacer::rawdata::TYRawLocationPbf& immediatelocation() const;
  ::innerpeacer::rawdata::TYRawLocationPbf* mutable_immediatelocation();
  ::innerpeacer::rawdata::TYRawLocationPbf* release_immediatelocation();
  void set_allocated_immediatelocation(::innerpeacer::rawdata::TYRawLocationPbf* immediatelocation);

  // required double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawSignalEventPbf)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_location();
  void clear_has_location();
  void set_has_immediatelocation();
  void clear_has_immediatelocation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawBeaconSignalPbf > beacons_;
  ::innerpeacer::rawdata::TYRawLocationPbf* location_;
  ::innerpeacer::rawdata::TYRawLocationPbf* immediatelocation_;
  double timestamp_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TYRawDataCollectionPbf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:innerpeacer.rawdata.TYRawDataCollectionPbf) */ {
 public:
  TYRawDataCollectionPbf();
  virtual ~TYRawDataCollectionPbf();

  TYRawDataCollectionPbf(const TYRawDataCollectionPbf& from);

  inline TYRawDataCollectionPbf& operator=(const TYRawDataCollectionPbf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TYRawDataCollectionPbf& default_instance();

  static inline const TYRawDataCollectionPbf* internal_default_instance() {
    return reinterpret_cast<const TYRawDataCollectionPbf*>(
               &_TYRawDataCollectionPbf_default_instance_);
  }

  void Swap(TYRawDataCollectionPbf* other);

  // implements Message ----------------------------------------------

  inline TYRawDataCollectionPbf* New() const PROTOBUF_FINAL { return New(NULL); }

  TYRawDataCollectionPbf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TYRawDataCollectionPbf& from);
  void MergeFrom(const TYRawDataCollectionPbf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TYRawDataCollectionPbf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .innerpeacer.rawdata.TYRawStepEventPbf stepEvents = 3;
  int stepevents_size() const;
  void clear_stepevents();
  static const int kStepEventsFieldNumber = 3;
  const ::innerpeacer::rawdata::TYRawStepEventPbf& stepevents(int index) const;
  ::innerpeacer::rawdata::TYRawStepEventPbf* mutable_stepevents(int index);
  ::innerpeacer::rawdata::TYRawStepEventPbf* add_stepevents();
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawStepEventPbf >*
      mutable_stepevents();
  const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawStepEventPbf >&
      stepevents() const;

  // repeated .innerpeacer.rawdata.TYRawHeadingEventPbf headingEvents = 4;
  int headingevents_size() const;
  void clear_headingevents();
  static const int kHeadingEventsFieldNumber = 4;
  const ::innerpeacer::rawdata::TYRawHeadingEventPbf& headingevents(int index) const;
  ::innerpeacer::rawdata::TYRawHeadingEventPbf* mutable_headingevents(int index);
  ::innerpeacer::rawdata::TYRawHeadingEventPbf* add_headingevents();
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawHeadingEventPbf >*
      mutable_headingevents();
  const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawHeadingEventPbf >&
      headingevents() const;

  // repeated .innerpeacer.rawdata.TYRawSignalEventPbf signalEvents = 5;
  int signalevents_size() const;
  void clear_signalevents();
  static const int kSignalEventsFieldNumber = 5;
  const ::innerpeacer::rawdata::TYRawSignalEventPbf& signalevents(int index) const;
  ::innerpeacer::rawdata::TYRawSignalEventPbf* mutable_signalevents(int index);
  ::innerpeacer::rawdata::TYRawSignalEventPbf* add_signalevents();
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawSignalEventPbf >*
      mutable_signalevents();
  const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawSignalEventPbf >&
      signalevents() const;

  // required string dataID = 1;
  bool has_dataid() const;
  void clear_dataid();
  static const int kDataIDFieldNumber = 1;
  const ::std::string& dataid() const;
  void set_dataid(const ::std::string& value);
  #if LANG_CXX11
  void set_dataid(::std::string&& value);
  #endif
  void set_dataid(const char* value);
  void set_dataid(const char* value, size_t size);
  ::std::string* mutable_dataid();
  ::std::string* release_dataid();
  void set_allocated_dataid(::std::string* dataid);

  // required double timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:innerpeacer.rawdata.TYRawDataCollectionPbf)
 private:
  void set_has_dataid();
  void clear_has_dataid();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawStepEventPbf > stepevents_;
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawHeadingEventPbf > headingevents_;
  ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawSignalEventPbf > signalevents_;
  ::google::protobuf::internal::ArenaStringPtr dataid_;
  double timestamp_;
  friend struct protobuf_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TYRawStepEventPbf

// required double timestamp = 1;
inline bool TYRawStepEventPbf::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawStepEventPbf::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawStepEventPbf::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawStepEventPbf::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double TYRawStepEventPbf::timestamp() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawStepEventPbf.timestamp)
  return timestamp_;
}
inline void TYRawStepEventPbf::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawStepEventPbf.timestamp)
}

// -------------------------------------------------------------------

// TYRawHeadingEventPbf

// required double timestamp = 1;
inline bool TYRawHeadingEventPbf::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawHeadingEventPbf::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawHeadingEventPbf::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawHeadingEventPbf::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double TYRawHeadingEventPbf::timestamp() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawHeadingEventPbf.timestamp)
  return timestamp_;
}
inline void TYRawHeadingEventPbf::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawHeadingEventPbf.timestamp)
}

// required double heading = 2;
inline bool TYRawHeadingEventPbf::has_heading() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TYRawHeadingEventPbf::set_has_heading() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TYRawHeadingEventPbf::clear_has_heading() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TYRawHeadingEventPbf::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline double TYRawHeadingEventPbf::heading() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawHeadingEventPbf.heading)
  return heading_;
}
inline void TYRawHeadingEventPbf::set_heading(double value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawHeadingEventPbf.heading)
}

// -------------------------------------------------------------------

// TYRawBeaconSignalPbf

// required string uuid = 1;
inline bool TYRawBeaconSignalPbf::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawBeaconSignalPbf::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawBeaconSignalPbf::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& TYRawBeaconSignalPbf::uuid() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
  return uuid_.GetNoArena();
}
inline void TYRawBeaconSignalPbf::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
}
#if LANG_CXX11
inline void TYRawBeaconSignalPbf::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
}
#endif
inline void TYRawBeaconSignalPbf::set_uuid(const char* value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
}
inline void TYRawBeaconSignalPbf::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
}
inline ::std::string* TYRawBeaconSignalPbf::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TYRawBeaconSignalPbf::release_uuid() {
  // @@protoc_insertion_point(field_release:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TYRawBeaconSignalPbf::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:innerpeacer.rawdata.TYRawBeaconSignalPbf.uuid)
}

// required uint32 major = 2;
inline bool TYRawBeaconSignalPbf::has_major() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_major() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TYRawBeaconSignalPbf::clear_has_major() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TYRawBeaconSignalPbf::clear_major() {
  major_ = 0u;
  clear_has_major();
}
inline ::google::protobuf::uint32 TYRawBeaconSignalPbf::major() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.major)
  return major_;
}
inline void TYRawBeaconSignalPbf::set_major(::google::protobuf::uint32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.major)
}

// required uint32 minor = 3;
inline bool TYRawBeaconSignalPbf::has_minor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_minor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TYRawBeaconSignalPbf::clear_has_minor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TYRawBeaconSignalPbf::clear_minor() {
  minor_ = 0u;
  clear_has_minor();
}
inline ::google::protobuf::uint32 TYRawBeaconSignalPbf::minor() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.minor)
  return minor_;
}
inline void TYRawBeaconSignalPbf::set_minor(::google::protobuf::uint32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.minor)
}

// required double x = 4;
inline bool TYRawBeaconSignalPbf::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TYRawBeaconSignalPbf::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TYRawBeaconSignalPbf::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double TYRawBeaconSignalPbf::x() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.x)
  return x_;
}
inline void TYRawBeaconSignalPbf::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.x)
}

// required double y = 5;
inline bool TYRawBeaconSignalPbf::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TYRawBeaconSignalPbf::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TYRawBeaconSignalPbf::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double TYRawBeaconSignalPbf::y() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.y)
  return y_;
}
inline void TYRawBeaconSignalPbf::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.y)
}

// required uint32 floor = 6;
inline bool TYRawBeaconSignalPbf::has_floor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_floor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TYRawBeaconSignalPbf::clear_has_floor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TYRawBeaconSignalPbf::clear_floor() {
  floor_ = 0u;
  clear_has_floor();
}
inline ::google::protobuf::uint32 TYRawBeaconSignalPbf::floor() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.floor)
  return floor_;
}
inline void TYRawBeaconSignalPbf::set_floor(::google::protobuf::uint32 value) {
  set_has_floor();
  floor_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.floor)
}

// required uint32 rssi = 7;
inline bool TYRawBeaconSignalPbf::has_rssi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_rssi() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TYRawBeaconSignalPbf::clear_has_rssi() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TYRawBeaconSignalPbf::clear_rssi() {
  rssi_ = 0u;
  clear_has_rssi();
}
inline ::google::protobuf::uint32 TYRawBeaconSignalPbf::rssi() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.rssi)
  return rssi_;
}
inline void TYRawBeaconSignalPbf::set_rssi(::google::protobuf::uint32 value) {
  set_has_rssi();
  rssi_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.rssi)
}

// required double accuracy = 8;
inline bool TYRawBeaconSignalPbf::has_accuracy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TYRawBeaconSignalPbf::set_has_accuracy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TYRawBeaconSignalPbf::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TYRawBeaconSignalPbf::clear_accuracy() {
  accuracy_ = 0;
  clear_has_accuracy();
}
inline double TYRawBeaconSignalPbf::accuracy() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawBeaconSignalPbf.accuracy)
  return accuracy_;
}
inline void TYRawBeaconSignalPbf::set_accuracy(double value) {
  set_has_accuracy();
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawBeaconSignalPbf.accuracy)
}

// -------------------------------------------------------------------

// TYRawLocationPbf

// required double x = 1;
inline bool TYRawLocationPbf::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawLocationPbf::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawLocationPbf::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawLocationPbf::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double TYRawLocationPbf::x() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawLocationPbf.x)
  return x_;
}
inline void TYRawLocationPbf::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawLocationPbf.x)
}

// required double y = 2;
inline bool TYRawLocationPbf::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TYRawLocationPbf::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TYRawLocationPbf::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TYRawLocationPbf::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double TYRawLocationPbf::y() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawLocationPbf.y)
  return y_;
}
inline void TYRawLocationPbf::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawLocationPbf.y)
}

// required uint32 floor = 3;
inline bool TYRawLocationPbf::has_floor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TYRawLocationPbf::set_has_floor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TYRawLocationPbf::clear_has_floor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TYRawLocationPbf::clear_floor() {
  floor_ = 0u;
  clear_has_floor();
}
inline ::google::protobuf::uint32 TYRawLocationPbf::floor() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawLocationPbf.floor)
  return floor_;
}
inline void TYRawLocationPbf::set_floor(::google::protobuf::uint32 value) {
  set_has_floor();
  floor_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawLocationPbf.floor)
}

// -------------------------------------------------------------------

// TYRawSignalEventPbf

// required double timestamp = 1;
inline bool TYRawSignalEventPbf::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TYRawSignalEventPbf::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TYRawSignalEventPbf::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TYRawSignalEventPbf::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double TYRawSignalEventPbf::timestamp() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawSignalEventPbf.timestamp)
  return timestamp_;
}
inline void TYRawSignalEventPbf::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawSignalEventPbf.timestamp)
}

// repeated .innerpeacer.rawdata.TYRawBeaconSignalPbf beacons = 2;
inline int TYRawSignalEventPbf::beacons_size() const {
  return beacons_.size();
}
inline void TYRawSignalEventPbf::clear_beacons() {
  beacons_.Clear();
}
inline const ::innerpeacer::rawdata::TYRawBeaconSignalPbf& TYRawSignalEventPbf::beacons(int index) const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawSignalEventPbf.beacons)
  return beacons_.Get(index);
}
inline ::innerpeacer::rawdata::TYRawBeaconSignalPbf* TYRawSignalEventPbf::mutable_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawSignalEventPbf.beacons)
  return beacons_.Mutable(index);
}
inline ::innerpeacer::rawdata::TYRawBeaconSignalPbf* TYRawSignalEventPbf::add_beacons() {
  // @@protoc_insertion_point(field_add:innerpeacer.rawdata.TYRawSignalEventPbf.beacons)
  return beacons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawBeaconSignalPbf >*
TYRawSignalEventPbf::mutable_beacons() {
  // @@protoc_insertion_point(field_mutable_list:innerpeacer.rawdata.TYRawSignalEventPbf.beacons)
  return &beacons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawBeaconSignalPbf >&
TYRawSignalEventPbf::beacons() const {
  // @@protoc_insertion_point(field_list:innerpeacer.rawdata.TYRawSignalEventPbf.beacons)
  return beacons_;
}

// required .innerpeacer.rawdata.TYRawLocationPbf location = 3;
inline bool TYRawSignalEventPbf::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawSignalEventPbf::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawSignalEventPbf::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawSignalEventPbf::clear_location() {
  if (location_ != NULL) location_->::innerpeacer::rawdata::TYRawLocationPbf::Clear();
  clear_has_location();
}
inline const ::innerpeacer::rawdata::TYRawLocationPbf& TYRawSignalEventPbf::location() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawSignalEventPbf.location)
  return location_ != NULL ? *location_
                         : *::innerpeacer::rawdata::TYRawLocationPbf::internal_default_instance();
}
inline ::innerpeacer::rawdata::TYRawLocationPbf* TYRawSignalEventPbf::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::innerpeacer::rawdata::TYRawLocationPbf;
  }
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawSignalEventPbf.location)
  return location_;
}
inline ::innerpeacer::rawdata::TYRawLocationPbf* TYRawSignalEventPbf::release_location() {
  // @@protoc_insertion_point(field_release:innerpeacer.rawdata.TYRawSignalEventPbf.location)
  clear_has_location();
  ::innerpeacer::rawdata::TYRawLocationPbf* temp = location_;
  location_ = NULL;
  return temp;
}
inline void TYRawSignalEventPbf::set_allocated_location(::innerpeacer::rawdata::TYRawLocationPbf* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:innerpeacer.rawdata.TYRawSignalEventPbf.location)
}

// required .innerpeacer.rawdata.TYRawLocationPbf immediateLocation = 4;
inline bool TYRawSignalEventPbf::has_immediatelocation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TYRawSignalEventPbf::set_has_immediatelocation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TYRawSignalEventPbf::clear_has_immediatelocation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TYRawSignalEventPbf::clear_immediatelocation() {
  if (immediatelocation_ != NULL) immediatelocation_->::innerpeacer::rawdata::TYRawLocationPbf::Clear();
  clear_has_immediatelocation();
}
inline const ::innerpeacer::rawdata::TYRawLocationPbf& TYRawSignalEventPbf::immediatelocation() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawSignalEventPbf.immediateLocation)
  return immediatelocation_ != NULL ? *immediatelocation_
                         : *::innerpeacer::rawdata::TYRawLocationPbf::internal_default_instance();
}
inline ::innerpeacer::rawdata::TYRawLocationPbf* TYRawSignalEventPbf::mutable_immediatelocation() {
  set_has_immediatelocation();
  if (immediatelocation_ == NULL) {
    immediatelocation_ = new ::innerpeacer::rawdata::TYRawLocationPbf;
  }
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawSignalEventPbf.immediateLocation)
  return immediatelocation_;
}
inline ::innerpeacer::rawdata::TYRawLocationPbf* TYRawSignalEventPbf::release_immediatelocation() {
  // @@protoc_insertion_point(field_release:innerpeacer.rawdata.TYRawSignalEventPbf.immediateLocation)
  clear_has_immediatelocation();
  ::innerpeacer::rawdata::TYRawLocationPbf* temp = immediatelocation_;
  immediatelocation_ = NULL;
  return temp;
}
inline void TYRawSignalEventPbf::set_allocated_immediatelocation(::innerpeacer::rawdata::TYRawLocationPbf* immediatelocation) {
  delete immediatelocation_;
  immediatelocation_ = immediatelocation;
  if (immediatelocation) {
    set_has_immediatelocation();
  } else {
    clear_has_immediatelocation();
  }
  // @@protoc_insertion_point(field_set_allocated:innerpeacer.rawdata.TYRawSignalEventPbf.immediateLocation)
}

// -------------------------------------------------------------------

// TYRawDataCollectionPbf

// required string dataID = 1;
inline bool TYRawDataCollectionPbf::has_dataid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TYRawDataCollectionPbf::set_has_dataid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TYRawDataCollectionPbf::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TYRawDataCollectionPbf::clear_dataid() {
  dataid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataid();
}
inline const ::std::string& TYRawDataCollectionPbf::dataid() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
  return dataid_.GetNoArena();
}
inline void TYRawDataCollectionPbf::set_dataid(const ::std::string& value) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
}
#if LANG_CXX11
inline void TYRawDataCollectionPbf::set_dataid(::std::string&& value) {
  set_has_dataid();
  dataid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
}
#endif
inline void TYRawDataCollectionPbf::set_dataid(const char* value) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
}
inline void TYRawDataCollectionPbf::set_dataid(const char* value, size_t size) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
}
inline ::std::string* TYRawDataCollectionPbf::mutable_dataid() {
  set_has_dataid();
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
  return dataid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TYRawDataCollectionPbf::release_dataid() {
  // @@protoc_insertion_point(field_release:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
  clear_has_dataid();
  return dataid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TYRawDataCollectionPbf::set_allocated_dataid(::std::string* dataid) {
  if (dataid != NULL) {
    set_has_dataid();
  } else {
    clear_has_dataid();
  }
  dataid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataid);
  // @@protoc_insertion_point(field_set_allocated:innerpeacer.rawdata.TYRawDataCollectionPbf.dataID)
}

// required double timestamp = 2;
inline bool TYRawDataCollectionPbf::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TYRawDataCollectionPbf::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TYRawDataCollectionPbf::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TYRawDataCollectionPbf::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double TYRawDataCollectionPbf::timestamp() const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawDataCollectionPbf.timestamp)
  return timestamp_;
}
inline void TYRawDataCollectionPbf::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:innerpeacer.rawdata.TYRawDataCollectionPbf.timestamp)
}

// repeated .innerpeacer.rawdata.TYRawStepEventPbf stepEvents = 3;
inline int TYRawDataCollectionPbf::stepevents_size() const {
  return stepevents_.size();
}
inline void TYRawDataCollectionPbf::clear_stepevents() {
  stepevents_.Clear();
}
inline const ::innerpeacer::rawdata::TYRawStepEventPbf& TYRawDataCollectionPbf::stepevents(int index) const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawDataCollectionPbf.stepEvents)
  return stepevents_.Get(index);
}
inline ::innerpeacer::rawdata::TYRawStepEventPbf* TYRawDataCollectionPbf::mutable_stepevents(int index) {
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawDataCollectionPbf.stepEvents)
  return stepevents_.Mutable(index);
}
inline ::innerpeacer::rawdata::TYRawStepEventPbf* TYRawDataCollectionPbf::add_stepevents() {
  // @@protoc_insertion_point(field_add:innerpeacer.rawdata.TYRawDataCollectionPbf.stepEvents)
  return stepevents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawStepEventPbf >*
TYRawDataCollectionPbf::mutable_stepevents() {
  // @@protoc_insertion_point(field_mutable_list:innerpeacer.rawdata.TYRawDataCollectionPbf.stepEvents)
  return &stepevents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawStepEventPbf >&
TYRawDataCollectionPbf::stepevents() const {
  // @@protoc_insertion_point(field_list:innerpeacer.rawdata.TYRawDataCollectionPbf.stepEvents)
  return stepevents_;
}

// repeated .innerpeacer.rawdata.TYRawHeadingEventPbf headingEvents = 4;
inline int TYRawDataCollectionPbf::headingevents_size() const {
  return headingevents_.size();
}
inline void TYRawDataCollectionPbf::clear_headingevents() {
  headingevents_.Clear();
}
inline const ::innerpeacer::rawdata::TYRawHeadingEventPbf& TYRawDataCollectionPbf::headingevents(int index) const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawDataCollectionPbf.headingEvents)
  return headingevents_.Get(index);
}
inline ::innerpeacer::rawdata::TYRawHeadingEventPbf* TYRawDataCollectionPbf::mutable_headingevents(int index) {
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawDataCollectionPbf.headingEvents)
  return headingevents_.Mutable(index);
}
inline ::innerpeacer::rawdata::TYRawHeadingEventPbf* TYRawDataCollectionPbf::add_headingevents() {
  // @@protoc_insertion_point(field_add:innerpeacer.rawdata.TYRawDataCollectionPbf.headingEvents)
  return headingevents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawHeadingEventPbf >*
TYRawDataCollectionPbf::mutable_headingevents() {
  // @@protoc_insertion_point(field_mutable_list:innerpeacer.rawdata.TYRawDataCollectionPbf.headingEvents)
  return &headingevents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawHeadingEventPbf >&
TYRawDataCollectionPbf::headingevents() const {
  // @@protoc_insertion_point(field_list:innerpeacer.rawdata.TYRawDataCollectionPbf.headingEvents)
  return headingevents_;
}

// repeated .innerpeacer.rawdata.TYRawSignalEventPbf signalEvents = 5;
inline int TYRawDataCollectionPbf::signalevents_size() const {
  return signalevents_.size();
}
inline void TYRawDataCollectionPbf::clear_signalevents() {
  signalevents_.Clear();
}
inline const ::innerpeacer::rawdata::TYRawSignalEventPbf& TYRawDataCollectionPbf::signalevents(int index) const {
  // @@protoc_insertion_point(field_get:innerpeacer.rawdata.TYRawDataCollectionPbf.signalEvents)
  return signalevents_.Get(index);
}
inline ::innerpeacer::rawdata::TYRawSignalEventPbf* TYRawDataCollectionPbf::mutable_signalevents(int index) {
  // @@protoc_insertion_point(field_mutable:innerpeacer.rawdata.TYRawDataCollectionPbf.signalEvents)
  return signalevents_.Mutable(index);
}
inline ::innerpeacer::rawdata::TYRawSignalEventPbf* TYRawDataCollectionPbf::add_signalevents() {
  // @@protoc_insertion_point(field_add:innerpeacer.rawdata.TYRawDataCollectionPbf.signalEvents)
  return signalevents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawSignalEventPbf >*
TYRawDataCollectionPbf::mutable_signalevents() {
  // @@protoc_insertion_point(field_mutable_list:innerpeacer.rawdata.TYRawDataCollectionPbf.signalEvents)
  return &signalevents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::innerpeacer::rawdata::TYRawSignalEventPbf >&
TYRawDataCollectionPbf::signalevents() const {
  // @@protoc_insertion_point(field_list:innerpeacer.rawdata.TYRawDataCollectionPbf.signalEvents)
  return signalevents_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace rawdata
}  // namespace innerpeacer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_t_5fy_5fraw_5fdata_5fcollection_5fpbf_2eproto__INCLUDED
